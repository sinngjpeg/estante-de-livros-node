openapi: 3.0.0
info:
  title: Mercado Livro API
  description: API para controlar livros e suas informações.
  version: 0.0.1
  contact:
    name: Suporte a Devs
    email: contato@example.com
  license:
    name: "Licença: GPLv3"
    url: https://www.gnu.org/licenses/gpl-3.0.html

servers:
  - url: http://localhost:3000/api/
    description: API de Teste

paths:
  /books:
    get:
      summary: Recupera todos os livros
      description: Retorna uma lista de todos os livros disponíveis.
      responses:
        200:
          description: Lista de livros recuperada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
    post:
      summary: Cria novo livro
      description: Adiciona um novo livro ao sistema.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Book"
      responses:
        "201":
          description: Livro criado com sucesso
        "400":
          description: Dados inválidos

  /books/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: Recupera um livro pelo ID
      description: Retorna os detalhes de um livro específico.
      responses:
        200:
          description: Livro recuperado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        404:
          description: Livro não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Livro não encontrado
        500:
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Erro interno do servidor

    put:
      summary: Atualiza um livro existente
      description: Atualiza os dados de um livro com o ID fornecido.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Book"
      responses:
        200:
          description: Livro atualizado com sucesso
        400:
          description: Requisição inválida
        404:
          description: Livro não encontrado

    delete:
      summary: Remove um livro existente
      description: Deleta um livro com base no ID.
      responses:
        204:
          description: Livro deletado com sucesso (sem conteúdo)
        404:
          description: Livro não encontrado

components:
  schemas:
    Book:
      type: object
      required:
        - title
        - author
      properties:
        id:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: O Pequeno Príncipe
        author:
          type: string
          example: Antoine de Saint-Exupéry
